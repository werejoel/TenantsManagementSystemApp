@using TenantsManagementApp.ViewModels
@using TenantsManagementApp.ViewModels.Roles
@using TenantsManagementApp.ViewModels.Claims
@model PagedResult<ClaimListItemViewModel>
@{
ViewData["Title"] = "Claims Management";
}
<div class="container mt-1">
<div class="d-flex flex-wrap align-items-center justify-content-between gap-2 mb-4 pb-2 border-bottom">
<div>
<h1 class="h3 mb-1 fw-bold text-primary">Claims Management</h1>
<p class="text-muted mb-0">Search, filter, and manage application Claims.</p>
</div>
</div>
@if (TempData["Success"] is string sMsg)
{
<div class="alert alert-success alert-dismissible fade show" role="alert">
<i class="bi bi-check-circle me-2"></i>@sMsg
<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
</div>
}
@if (TempData["Error"] is string eMsg)
{
<div class="alert alert-danger alert-dismissible fade show" role="alert">
<i class="bi bi-exclamation-triangle me-2"></i>@eMsg
<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
</div>
}
<!-- Search & Filter -->
<form method="get" class="row g-3 mb-3">
<div class="col-md-3">
<input type="text" name="search" value="@Context.Request.Query["search"]"
class="form-control" placeholder="Search Claim Type or Value..." />
</div>
<div class="col-md-3">
<select name="category" class="form-select">
<option value="">-- All Categories --</option>
<option value="User" selected="@("User" == Context.Request.Query["category"])">User</option>
<option value="Role" selected="@("Role" == Context.Request.Query["category"])">Role</option>
<option value="Both" selected="@("Both" == Context.Request.Query["category"])">Both</option>
</select>
</div>
<div class="col-md-2">
<button type="submit" class="btn btn-primary w-100">Filter</button>
</div>
<div class="col-md-2">
<button type="reset" class="btn btn-info w-100">Reset</button>
</div>
<div class="col-md-2 text-end">
<a asp-action="Create" class="btn btn-success">+ Add New Claim</a>
</div>
</form>
<!-- Claims Table -->
@if (!Model.Items.Any())
{
<div class="alert alert-info">No claims found.</div>
}
else
{
<table class="table table-striped table-hover align-middle shadow-sm border rounded">
<thead class="table-primary">
<tr>
<th>Type</th>
<th>Value</th>
<th>Category</th>
<th>Description</th>
<th>Status</th>
<th style="width: 150px;">Actions</th>
</tr>
</thead>
<tbody>
@foreach (var claim in Model.Items)
{
<tr>
<td>@claim.ClaimType</td>
<td>@claim.ClaimValue</td>
<td>@claim.Category</td>
<td>@claim.Description</td>
<td>
@if (claim.IsActive)
{
<span class="badge bg-success">Active</span>
}
else
{
<span class="badge bg-danger">Inactive</span>
}
</td>
<td>
<a asp-action="Edit" asp-route-id="@claim.Id" class="btn btn-sm btn-primary me-1">Edit</a>
<a asp-action="Delete" asp-route-id="@claim.Id" class="btn btn-sm btn-danger me-1">Delete</a>
</td>
</tr>
}
</tbody>
</table>
<!-- Pager -->
<partial name="~/Views/Shared/_Pager.cshtml"
model="new PagedResult<object> { Items = Array.Empty<object>(), TotalCount = Model.TotalCount, PageNumber = Model.PageNumber, PageSize = Model.PageSize }" />
}
</div>